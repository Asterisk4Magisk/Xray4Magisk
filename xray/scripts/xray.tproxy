#!/system/bin/sh

table_id="100"
inet_uid="3003"
proxy_port="65535"
mark_id="1"
appid_file="/data/adb/xray/appid.list"
proxy_mode="none"
appid_list=()
ignore_out="/data/adb/xray/ignore_out.list"
ignore_out_list=()
iptables="iptables -w 100"
intranet=(0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8  169.254.0.0/16 172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.88.99.0/24 192.168.0.0/16 198.51.100.0/24 203.0.113.0/24 224.0.0.0/4 240.0.0.0/4 255.255.255.255/32)
# intranet=(0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.88.99.0/24 192.168.0.0/16 198.18.0.0/15 198.51.100.0/24 203.0.113.0/24 224.0.0.0/4 240.0.0.0/4 255.255.255.255/32)
intranet6=(::/128 ::1/128 ::ffff:0:0/96 100::/64 64:ff9b::/96 2001::/32 2001:10::/28 2001:20::/28 2001:db8::/32 2002::/16 fc00::/7 fe80::/10 ff00::/8)

add_route() {
    ip rule add fwmark ${mark_id} table ${table_id}
    ip route add local 0.0.0.0/0 dev lo table ${table_id}
    if [ -f /data/adb/xray/ipv6 ] ; then
        ip -6 rule add fwmark ${mark_id} table ${table_id}
        ip -6 route add local ::/0 dev lo table ${table_id}
    fi
}

del_route() {
    ip rule del fwmark ${mark_id} table ${table_id}
    ip route flush table ${table_id}
    if [ -f /data/adb/xray/ipv6 ] ; then
        ip -6 rule del fwmark ${mark_id} table ${table_id}
        ip -6 route flush table ${table_id}
    fi
}

create_mangle_iptables() {
    echo "[Info]: creating mangle chain"
    ${iptables} -t mangle -N XRAY

    if [ "${iptables}" = "ip6tables -w 100" ] ; then
        for subnet6 in ${intranet6[@]} ; do
            ${iptables} -t mangle -A XRAY -d ${subnet6} -j RETURN
        done
        # mark all traffic
        ${iptables} -t mangle -A XRAY -p tcp -j TPROXY --on-ip ::1 --on-port ${proxy_port} --tproxy-mark ${mark_id}
        ${iptables} -t mangle -A XRAY -p udp -j TPROXY --on-ip ::1 --on-port ${proxy_port} --tproxy-mark ${mark_id}
    else
        for subnet in ${intranet[@]} ; do
            ${iptables} -t mangle -A XRAY -d ${subnet} -j RETURN
        done
        # mark all traffic
        ${iptables} -t mangle -A XRAY -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port ${proxy_port} --tproxy-mark ${mark_id}
        ${iptables} -t mangle -A XRAY -p udp -j TPROXY --on-ip 127.0.0.1 --on-port ${proxy_port} --tproxy-mark ${mark_id}
    fi

    # Bypass Xray itself
    # ${iptables} -t mangle -A XRAY -m owner --gid-owner ${inet_uid} -j RETURN

    ${iptables} -t mangle -A PREROUTING -j XRAY

    create_proxy_iptables
}

create_proxy_iptables() {
    echo "[Info]: creating proxy"
    ${iptables} -t mangle -N PROXY
    
    # ignore output interface
    if [ -f ${ignore_out} ] ; then
        echo "" >> "${ignore_out}"
        sed -i '/^$/d' "${ignore_out}"
        while read ignore_out_line ; do
            ignore_out_text=(`echo ${ignore_out_line}`)
            for ignore_out_word in ${ignore_out_text[*]} ; do
                ignore_out_list=(${ignore_out_list[*]} ${ignore_out_word})
            done
        done < ${ignore_out}    
    fi
    for ignore in ${ignore_out_list[@]} ; do
        ${iptables} -t mangle -A PROXY -o ${ignore} -j RETURN
    done

    if [ "${iptables}" = "ip6tables -w 100" ] ; then
        for subnet6 in ${intranet6[@]} ; do
            ${iptables} -t mangle -A PROXY -d ${subnet6} -j RETURN
        done
    else
        for subnet in ${intranet[@]} ; do
            ${iptables} -t mangle -A PROXY -d ${subnet} -j RETURN
        done
    fi

    # Bypass Xray itself
    ${iptables} -t mangle -A PROXY -m owner --gid-owner ${inet_uid} -j RETURN

    probe_proxy_mode

    if [ "${proxy_mode}" = "ALL" ] ; then
        ${iptables} -t mangle -A PROXY -p tcp -j MARK --set-mark ${mark_id}
        ${iptables} -t mangle -A PROXY -p udp -j MARK --set-mark ${mark_id}
    elif [ "${proxy_mode}" = "skip" ] ; then
        for appid in ${appid_list[@]} ; do
            ${iptables} -t mangle -I PROXY -m owner --uid-owner ${appid} -j RETURN
        done
        ${iptables} -t mangle -A PROXY -p tcp -j MARK --set-mark ${mark_id}
        ${iptables} -t mangle -A PROXY -p udp -j MARK --set-mark ${mark_id}
    elif [ "${proxy_mode}" = "pick" ] ; then
        for appid in ${appid_list[@]} ; do
            ${iptables} -t mangle -A PROXY -p tcp -m owner --uid-owner ${appid} -j MARK --set-mark ${mark_id}
            ${iptables} -t mangle -A PROXY -p udp -m owner --uid-owner ${appid} -j MARK --set-mark ${mark_id}
        done
    fi

    ${iptables} -t mangle -A OUTPUT -j PROXY
}

clean_mangle_iptables() {
    echo "[Info]: cleaning mangle iptables"
    ${iptables} -t mangle -D OUTPUT -j PROXY
    ${iptables} -t mangle -D PREROUTING -j XRAY
    ${iptables} -t mangle -F PROXY
    ${iptables} -t mangle -F XRAY
    ${iptables} -t mangle -X PROXY
    ${iptables} -t mangle -X XRAY
}

probe_proxy_mode() {
    echo "" >> ${appid_file}
    sed -i '/^$/d' "${appid_file}"
    if [ -f "${appid_file}" ] ; then
        first_line=$(head -1 ${appid_file})
        if [ "${first_line}" = "ALL" ] ; then
            proxy_mode=ALL
        elif [ "${first_line}" = "bypass" ] ; then
            proxy_mode=skip
        else
            proxy_mode=pick
        fi
    fi

    while read appid_line ; do
        appid_text=(`echo ${appid_line}`)
        for appid_word in ${appid_text[*]} ; do
            if [ "${appid_word}" = "bypass" ] ; then
                break
            else
                appid_list=(${appid_list[*]} ${appid_word})
            fi
        done
    done < ${appid_file}
    # echo ${appid_list[*]}
}

disable_ipv6() {
    echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
    echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
    echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
    echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
}

enable_ipv6() {
    echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
    echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
    echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
    echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
}

disable_proxy() {
    del_route
    iptables="iptables -w 100"

    echo "using ipv4"
    clean_mangle_iptables 2> /dev/null

    enable_ipv6
    if [ -f /data/adb/xray/ipv6 ] ; then
        echo "using ipv6"
        iptables="ip6tables -w 100"
        clean_mangle_iptables 2> /dev/null
        enable_ipv6
    fi
}

enable_proxy() {
    add_route
    iptables="iptables -w 100"

    echo "cleaning ipv4"
    create_mangle_iptables

    if [ -f /data/adb/xray/ipv6 ] ; then
        echo "cleaning ipv6"
        iptables="ip6tables -w 100"
        create_mangle_iptables
    else
        disable_ipv6
    fi
}

case "$1" in
  enable)
    disable_proxy
    enable_proxy
    ;;
  disable)
    disable_proxy
    ;;
  renew)
    disable_proxy
    enable_proxy
    ;;
  *)
    echo "$0:  usage:  $0 {enable|disable|renew}"
    ;;
esac
