#!/bin/sh
magisk_busybox="/data/adb/magisk/busybox"

data_path="/data/adb/xray"
bin_name="watch.sh"
bin_path="${data_path}/scripts/${bin_name}"
run_path="${data_path}/run"
pid_file="${run_path}/${bin_name}.pid"
error_log="${run_path}/watch.error.log"

probe_alive() {
    [ -f ${pid_file} ] && cmd_file="/proc/`cat ${pid_file}`/cmdline" || return 1
    [ -f ${cmd_file} ] && grep -q ${bin_path} ${cmd_file} && return 0 || return 1
}

display_pid() {
    if probe_alive ; then
        echo "[Info]: ${bin_name} service is running. ( PID: `cat ${pid_file}` )"
        return 0
    else
        echo "[Info]: ${bin_name} service is stopped."
        return 1
    fi
}

start_service() {
    if probe_alive ; then
        echo "[Info]: ${bin_name} service is running. ( PID: `cat ${pid_file}` )"
    else
        echo "[Info]: Starting ${bin_name} service."
        nohup ${bin_path} &>${error_log} &
        echo -n $! > ${pid_file}
        if probe_alive ; then
            echo "[Warning]: ${bin_name} service is running ( PID: `cat ${pid_file}` )"
        else
            echo "[Error]: Start ${bin_name} service Failed."
            rm -f ${pid_file}
        fi
    fi
}

stop_service() {
    if display_pid ; then
        echo "[Info]: Stopping ${bin_name} service."
        kill `cat ${pid_file}`
        sleep 1
        display_pid
    fi
    rm -f ${pid_file}
}

case "$1" in
    start)
        start_service
        ;;
    stop)
        stop_service
        ;;
    restart)
        stop_service
        start_service
        ;;
    status)
        display_pid
        ;;
    *)
        echo "$0:  usage:  $0 {start|stop|restart|status}"
        ;;
esac
